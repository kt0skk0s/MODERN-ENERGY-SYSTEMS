#Σύγχρονα Ενεργειακά Συστήματα
#Χειμερινό 2024-25
#Ομάδα 05

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# !!! PLEASE INSERT YOUR PATH
file_path = "C:\\Users\\efstr\\Desktop\\ΣΕΣ\\ergasia2\\Dataset.xlsx"

consumer5_df = pd.read_excel(file_path, sheet_name='Consumer5')
print(consumer5_df.head())
consumer5_df.drop(consumer5_df.columns[0], axis=1, inplace=True)
print(consumer5_df.head())
weather_df = pd.read_excel(file_path, sheet_name='Weather')
print(weather_df.head())

# Διαχείριση κενών τιμών στη θερμοκρασία πριν και μετά τη συγχώνευση
weather_df['TemperatureC'] = weather_df['TemperatureC'].interpolate(method='linear')  # Παρεμβολή

# Δημιουργία ημερομηνιών
weather_df['datetime'] = pd.to_datetime(weather_df['datetime'])
consumer5_df['datetime'] = pd.date_range(start="2019-01-01 00:15", periods=len(consumer5_df), freq='15min')
print(consumer5_df.head())

# Φιλτράρισμα δεδομένων μέχρι τις 2019-05-18 (μέχρι εκεί έχω τιμές για τη θερμοκρασία)
end_date = pd.to_datetime('2019-05-18')
weather_df = weather_df[weather_df['datetime'] <= end_date]
consumer5_df = consumer5_df[consumer5_df['datetime'] <= end_date]
print(consumer5_df.head())

# Συγχώνευση θερμοκρασίας με δεδομένα κατανάλωσης
consumer5_df = pd.merge(consumer5_df, weather_df[['datetime', 'TemperatureC']], on='datetime', how='left')
print(consumer5_df.head())

# Γέμισμα τυχόν νέων κενών τιμών μετά τη συγχώνευση
consumer5_df['TemperatureC'] = consumer5_df['TemperatureC'].interpolate(method='linear')


# Ομαδοποίηση δεδομένων ανά ημέρα
consumer5_df['date'] = consumer5_df['datetime'].dt.date 
daily_consumption = consumer5_df.groupby('date')['Total Consumption'].mean().reset_index()
daily_temperature = consumer5_df.groupby('date')['TemperatureC'].mean().reset_index()
print(daily_consumption.head())
print(daily_temperature.head(6))

'''
'''
### 2. Calculate Peak Mean Consumption and Peak Daily Temperature
# Mean Daily Consumption (highest mean consumption each day)
mean_daily_consumption = consumer5_df.groupby('date')['Total Consumption'].max().reset_index()
# Mean Daily Temperature (highest temperature each day)
mean_daily_temperature = consumer5_df.groupby('date')['TemperatureC'].max().reset_index()
print(f"Mean Daily Consumption: {mean_daily_consumption}")
print(f"Mean Daily Temperature: {mean_daily_temperature}")

combined_df = pd.DataFrame({
    'Mean Daily Temperature': mean_daily_temperature['TemperatureC'],
    'Mean Daily Consumption': mean_daily_consumption['Total Consumption']
})
print(combined_df)

# 4. Sort the combined DataFrame by Peak Daily Temperature in ascending order
combined_df_sorted = combined_df.sort_values(by='Mean Daily Temperature', ascending=True)
print(combined_df_sorted)
'''
'''



# Δημιουργία γραφικών παραστάσεων με δεδομένα ανά ημέρα
fig, axs = plt.subplots(2, 1, figsize=(14, 10), sharex=True)

# Κατανάλωση ηλεκτρικής ενέργειας
axs[0].plot(daily_consumption['date'], daily_consumption['Total Consumption'], color='blue', label='Μέση Κατανάλωση (kWh)')
axs[0].set_title('Μεταβολή Κατανάλωσης Ηλεκτρικής Ενέργειας (Ημερήσια)', fontsize=20)
axs[0].set_ylabel('Κατανάλωση (kWh)', fontsize=18)
axs[0].tick_params(axis='y', labelsize=16)
axs[0].legend()
axs[0].grid(True)

# Μεταβολή θερμοκρασίας
axs[1].plot(daily_temperature['date'], daily_temperature['TemperatureC'], color='red', label='Μέση Θερμοκρασία (°C)')
axs[1].set_title('Μεταβολή Θερμοκρασίας (Ημερήσια)', fontsize=20)
axs[1].set_xlabel('Ημερομηνία', fontsize=18)
axs[1].set_ylabel('Θερμοκρασία (°C)', fontsize=18)
axs[1].tick_params(axis='x', labelsize=16,rotation=45)
axs[1].tick_params(axis='y', labelsize=16)
axs[1].legend()
axs[1].grid(True)

# Ρύθμιση διάταξης
plt.tight_layout()
plt.xticks(fontsize=16)
plt.yticks(fontsize=16)
plt.show()

'''
'''
# 3. Plot "Peak Mean Consumption - Peak Daily Temperature"
# Creating the plot with the two variables
fig, ax = plt.subplots(figsize=(10, 6))

plt.scatter(combined_df_sorted['Mean Daily Temperature'], combined_df_sorted['Mean Daily Consumption'], color='blue', label='Data Points')
plt.title('Μέση Ημερήσια Κατανάλωση - Μέση Ημερήσια Θερμοκρασία', fontsize=20)
plt.xlabel('Μέγιστη Ημερήσια Θερμοκρασία (°C)', fontsize=18)
plt.ylabel('Μέση Ημερήσια Κατανάλωσης (kWh)', fontsize=18)
plt.grid(True)
plt.legend()

# Show the plot
plt.tight_layout()
plt.xticks(fontsize=16)
plt.yticks(fontsize=16)
plt.show()

'''
'''
